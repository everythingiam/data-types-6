package HashPrivate;

public class Plan {
    private Chelobek[] set;

    public Plan(int number){
        set = new Chelobek[number];
    }
    private int hashCount(Chelobek chel, int value){ // считает хеш
//        через цикл складываем все буквы и делим на размер сета (остаток от деления)
        return 0;
    }

    public void INSERT(Chelobek chel){ //вставлчет человека в сет

        /*
        1. считаем хеш и заносим в переменную
        2. в цикле делаем проверку: если пустое место, то останавливаем цикл
        3. Если нет, то считаем хеш еще раз (в параметр передаем i)
        4. заносим в сет в индекс хеша человека.
         */
    }
    public boolean MEMBER(Chelobek chel){ //проверяет наличие человека в сете
        return false;
        /*
        1. считаем хеш и заносим в переменную
        2. в цикле проверяем - если не пустой элемент и если он совпадает с тем, что в
        параметрах, то вернуть тру.
        3. Если нет, то считаем хеш ищо раз.
        4. По умолчанию вренуть фолз
         */
    }
    public void printSet(){ //выводит сет
        /*
        в цикле проверять, если элемент пустой - печатать НУЛЛ
        если нет, то напечатать человека через метод печати человека
         */
    }
    public void DELETE(Chelobek chel){ //удаляет человека
        /*
        1. считаем хеш и заносим в переменную
        2. в цикле проверяем, не пустой ли элемент и равен ли он тому, что в параметрах.
        3. Если да, то занулить этот элемент
        4. иначе считать хеш еще раз

        /*
        нужно пометить удаленный элемент (пустым значе
         */
    }
    public void MAKENULL(){ // опустошает сет
        //через цикл зануляем каждый элемент
    }
}

