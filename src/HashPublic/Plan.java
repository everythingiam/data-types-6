package HashPublic;

public class Plan {
    private Chelobek[] set;

    public Plan(int number){
        set = new Chelobek[number];
        //делить примерное количество имеющих значений делить на 10
    }
    private int hashCount(Chelobek chel){
       return 0;
        /*
        1. в цикле складываем все буквы и делим на размер сета. (остаток от деления)
         */
    }

    public void INSERT(Chelobek chel){
        /*
        1. считаем хеш и заносим в переменную
        2. если элемент в индексе хеша пустой, то ставим туда нового человека из параметров
        3. иначе создаем переменную типо current, и с помощью неё доходим до конца списка
        4. в current.next заносим человека.
         */
    }
    public boolean MEMBER(Chelobek chel) {
        return false;
        /*
        1. считаем хеш и заносим в переменную
        2. если элемент пустой, то возвращаем фолз
        3. если нет, то с помощью current доходим до конца списка
        4. и если совпадает, то возвращаем тру
        5. по умолчанию фолз
         */
    }
    public void printSet(){
        /*
        1. в цикле проверяем, если элемент нулл, и выводим НУЛЛ
        2. елси нет, то печатем человека, а затем печатаем список
         */
    }
    public void DELETE(Chelobek chel) {
        /*
        1. считаем хеш и заносим его в переменную
        2. если пустой, то ничего не делаем
        3. переходим к элементу в инидексе хеша и доходим до конца его списка.
        4. если совпало что-то из списка, то ссылаем предыдущий на следующий.
         */
    }

    public void MAKENULL(){
        //  в цикле всё занулляем
    }
}
